// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccountingApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200504082644_initialCommit")]
    partial class initialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("AccountingApp.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("AccountingApp.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("AddressID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonalIdentificationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoleID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressID");

                    b.HasIndex("RoleID");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("AccountingApp.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AddressID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("AccountingApp.Models.Invoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BillToCompanyID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsStorno")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonalIdentificationNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuppliercompanyID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaxableSupplyDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("BillToCompanyID");

                    b.HasIndex("SuppliercompanyID");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("AccountingApp.Models.InvoiceItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InvoiceID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<float>("PriceDph")
                        .HasColumnType("REAL");

                    b.Property<int>("PriceVat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("InvoiceItem");
                });

            modelBuilder.Entity("AccountingApp.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AccountingApp.Models.ViewModels.AdminUserEdit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("AddressID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NewPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonalIdentificationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoleID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressID");

                    b.HasIndex("RoleID");

                    b.ToTable("AdminUserEdit");
                });

            modelBuilder.Entity("AccountingApp.Models.AppUser", b =>
                {
                    b.HasOne("AccountingApp.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.HasOne("AccountingApp.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");
                });

            modelBuilder.Entity("AccountingApp.Models.Company", b =>
                {
                    b.HasOne("AccountingApp.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("AccountingApp.Models.Invoice", b =>
                {
                    b.HasOne("AccountingApp.Models.Company", "BillToCompany")
                        .WithMany()
                        .HasForeignKey("BillToCompanyID");

                    b.HasOne("AccountingApp.Models.Company", "Suppliercompany")
                        .WithMany()
                        .HasForeignKey("SuppliercompanyID");
                });

            modelBuilder.Entity("AccountingApp.Models.InvoiceItem", b =>
                {
                    b.HasOne("AccountingApp.Models.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceID");
                });

            modelBuilder.Entity("AccountingApp.Models.ViewModels.AdminUserEdit", b =>
                {
                    b.HasOne("AccountingApp.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.HasOne("AccountingApp.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");
                });
#pragma warning restore 612, 618
        }
    }
}
